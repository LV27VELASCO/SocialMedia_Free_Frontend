---
import { useI18n } from '../i18n';
const { translate, currentLang } = useI18n(Astro);
const visibility = translate('compliance.visibility.items') as unknown as {}[]
const security = translate('compliance.security.items') as unknown as {}[]
const network = translate('compliance.network.items') as unknown as {
  title: string;
  text: string;
  icon: string;
}[];
---

<section class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Header -->
    <div class="text-center mb-12 animate-fade-in">
        <h1 class="text-4xl md:text-5xl font-bold mb-4">
            {translate('compliance.title')} <span class="gradient-text">{translate('compliance.title.span')}</span>
        </h1>
    </div>

    <div class="space-y-8">

        <!-- Intro -->
        <p class="text-lg text-gray-300 leading-relaxed mb-8">
            {translate('compliance.intro.text')}
        </p>

        <!-- Section 1 -->
        <section class="bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-8">
            <h2 class="text-2xl font-bold mb-6 text-purple-400">
                {translate('compliance.visibility.title')}
            </h2>
            <ul class="space-y-4">
                {
                    visibility.map((item)=>(
                        <li class="flex items-start gap-3">
                            <span class="text-green-400 text-xl mt-1">‚úì</span>
                            <p class="text-gray-300 leading-relaxed">{item}</p>
                        </li>
                    ))
                }
                
            </ul>
        </section>

        <!-- Section 2 -->
        <section class="bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-8">
            <h2 class="text-2xl font-bold mb-6 text-purple-400">
                {translate('compliance.security.title')}
            </h2>
            <ul class="space-y-4">
                {
                    security.map((item)=>(
                        <li class="flex items-start gap-3">
                            <span class="text-blue-400 text-xl mt-1">üõ°Ô∏è</span>
                            <p class="text-gray-300 leading-relaxed">{item}</p>
                        </li>
                    ))
                }
            </ul>
        </section>

        <!-- Section 3 -->
        <section class="bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-8">
            <h2 class="text-2xl font-bold mb-6 text-purple-400">
                {translate('compliance.advertisement.title')}
            </h2>
            <p class="text-gray-300 leading-relaxed mb-4">
                {translate('compliance.advertisement.text')}
            </p>
            <div class="bg-purple-500/10 border border-purple-400/30 rounded-xl p-6">
                <p class="text-gray-300 leading-relaxed">
                    {translate('compliance.advertisement.highlight')}
                </p>
            </div>
        </section>

        <!-- Section 4 -->
        <section class="bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-8">
            <h2 class="text-2xl font-bold mb-6 text-purple-400">
                {translate('compliance.terms.title')}
            </h2>
            <p class="text-gray-300 leading-relaxed">
                {translate('compliance.terms.text')}
            </p>
        </section>

        <!-- Section 5 -->
        <section class="bg-gradient-to-br from-purple-500/10 to-blue-500/10 border border-purple-400/30 rounded-2xl p-8">
            <h2 class="text-2xl font-bold mb-6 text-purple-400">
                {translate('compliance.network.title')}
            </h2>
            <p class="text-gray-300 leading-relaxed mb-6">
                {translate('compliance.network.text')}
            </p>

            <div class="grid md:grid-cols-2 gap-4">
                {
                network.map((item, index) => (
                        <div class={`bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-5 ${
                                index === network.length - 1 ? "md:col-span-2" : ""}`}>
                            <div class="flex items-center gap-3 mb-2">
                                <span class="text-2xl">{item.icon}</span>
                                <h3 class="font-bold text-white">{item.title}</h3>
                            </div>
                            <p class="text-sm text-gray-400">{item.text}</p>
                        </div>
                    ))}
                
            </div>
        </section>

        <!-- Contact Section -->
        <section class="bg-gradient-to-r from-purple-500/20 to-blue-500/20 border border-purple-400/40 rounded-2xl p-8 text-center">
            <h3 class="text-xl font-bold mb-4 text-white">
                {translate('compliance.contact.title')}
            </h3>
            <p class="text-gray-300 mb-6">
                {translate('compliance.contact.text')}
            </p>
            <a href="mailto:contact@trendyup.es" 
            class="inline-flex items-center gap-2 px-8 py-3 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full font-semibold hover:from-purple-600 hover:to-blue-600 transition-all duration-300 shadow-lg hover:shadow-purple-500/50">
                <span>üìß</span>
                <span>{translate('compliance.contact.email')}</span>
            </a>
        </section>
    </div>
</section>



<button id="scrollToTop"
    class="fixed  bottom-8 right-8 w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-full shadow-lg hover:scale-110 transform transition-all duration-300 opacity-0 pointer-events-none z-50">
    ‚Üë
</button>

<script is:inline>
        // Scroll to top functionality
        const scrollToTopBtn = document.getElementById('scrollToTop');
        
        window.addEventListener('scroll', () => {
            if (window.pageYOffset > 300) {
                scrollToTopBtn.style.opacity = '1';
                scrollToTopBtn.style.pointerEvents = 'auto';
            } else {
                scrollToTopBtn.style.opacity = '0';
                scrollToTopBtn.style.pointerEvents = 'none';
            }
        });
        
        scrollToTopBtn.addEventListener('click', () => {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });

        // Smooth scroll for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Add entrance animations to sections
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, observerOptions);

        // Observe all sections
        document.querySelectorAll('section').forEach(section => {
            section.style.opacity = '0';
            section.style.transform = 'translateY(20px)';
            section.style.transition = 'all 0.6s ease-out';
            observer.observe(section);
        });
</script>