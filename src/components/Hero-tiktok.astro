---
import { useI18n } from '../i18n';
const { translate } = useI18n(Astro);
import tiktok from "../assets/tiktok.svg";
import PaymentModal from "./modals/payment-modal.astro";
import SelectFollowersTiktok from "./modals/select-followers-tiktok.astro";
---

<!-- Hero Section -->
<section id="inicio" class="relative overflow-hidden">

    <div class="relative container mx-auto px-6 py-20 text-center">
        <div class="max-w-4xl mx-auto">
            <!-- Main Headline -->
            <h1 class="text-5xl md:text-7xl font-black text-white mb-6 leading-tight">
                {translate('social.hero.title')} <span class="gradient-text-tiktok">TikTok</span>
                <br />
            </h1>
            <!-- Subheadline -->
            <p class="text-lg md:text-xl text-gray-300 mb-8 max-w-3xl mx-auto leading-relaxed">
                🔥 <strong class="text-yellow-400">{translate('social.hero.subtitle.span')}</strong> {translate('social.hero.subtitle')}
            </p>

            <!-- Hero Input Section -->
            <div class="max-w-2xl mx-auto mb-8">
                <div class="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/30">
                    <form id="heroForm" class="flex flex-col sm:flex-row gap-4">
                        <div class="flex-1 relative">
                            <input maxlength="20" type="text" id="usernameInput" name="usernameInput" autocomplete="off"
                                placeholder=`${translate('social.form.placeholder')} tiktok`
                                class="w-full px-6 py-4 text-lg bg-white20 border border-white/30 rounded-xl text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                                required />
                            <div class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400">
                                <img src={tiktok.src} alt="Icon tiktok">
                            </div>
                        </div>

                        <button type="submit"
                            class="px-8 py-4 bg-gradient-to-tl from-red-600/80 via-red-500 to-red-600/80 text-white font-bold text-lg rounded-xl hover:scale-105 transform transition-all duration-300 shadow-2xl flex items-center justify-center space-x-2 whitespace-nowrap">
                            <span>{translate('social.form.button')}</span>
                            <span>→</span>
                        </button>
                    </form>
                    <p id="message-error"
                        class="hidden text-center text-red-300 text-sm bg-red-500/20 p-3 mt-2 rounded-xl border border-red-400/30">
                    </p>
                    <div class="flex items-center justify-center space-x-6 mt-4 text-sm text-gray-300">
                        <div class="flex items-center space-x-1">
                            <span class="text-green-400">✓</span>
                            <span>{translate('social.form.f1')}</span>
                        </div>
                        <div class="flex items-center space-x-1">
                            <span class="text-green-400">✓</span>
                            <span>{translate('social.form.f2')}</span>
                        </div>
                        <div class="flex items-center space-x-1">
                            <span class="text-green-400">✓</span>
                            <span>{translate('social.form.f3')}</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Stats -->
            <div class="flex flex-wrap justify-center gap-8 mb-8">
                <div class="text-center">
                    <div class="text-3xl md:text-4xl font-bold text-yellow-400">
                        +4.5k
                    </div>
                    <div class="text-gray-300">{translate('social.metrics.f1')}</div>
                </div>
                <div class="text-center">
                    <div class="text-3xl md:text-4xl font-bold text-green-400">
                        98%
                    </div>
                    <div class="text-gray-300">{translate('social.metrics.f2')}</div>
                </div>
                <div class="text-center">
                    <div class="text-3xl md:text-4xl font-bold text-blue-400">
                        +3.8k
                    </div>
                    <div class="text-gray-300">{translate('social.metrics.f3')}</div>
                </div>
            </div>
            <!-- CTA Button -->
            <div class="space-y-2">
                <p class="text-sm text-gray-400">
                    ⚡ {translate('social.metrics.note')}
                </p>
            </div>
        </div>
    </div>
</section>

<SelectFollowersTiktok />

<PaymentModal />


<div id="loaderModal"
    class="hidden opacity-0 fixed inset-0 z-[70] flex items-center justify-center bg-black/70 backdrop-blur-sm transition-opacity duration-200"
    role="dialog" aria-modal="true" aria-labelledby="loaderTitle">
    <div class="mx-4 w-full max-w-sm rounded-2xl border border-white/20 bg-white/10 p-6 text-center shadow-xl">
        <div class="mx-auto mb-4 h-12 w-12 rounded-full border-4 border-blue-400/40 border-t-transparent animate-spin">
        </div>
        <h2 id="loaderTitle" class="text-white text-lg font-semibold mb-1">
            {translate('social.modal.loader.title')}
        </h2>
        <p data-loader-text class="text-gray-200 text-sm">
            {translate('social.modal.loader.subtitle')}
        </p>
    </div>
</div>


<!-- Hero Form -->
<script is:inline>

    window.addEventListener("load", () => {
            localStorage.clear();
    })

    const lag1 = document.getElementById("lang")?.value;

    const get_in_user = {
        es: "Debe ingresar usuario de Tiktok",
        en: "You must enter your TikTok username",
        fr: "Vous devez entrer votre nom d’utilisateur TikTok",
        pt: "Você deve inserir seu nome de usuário do TikTok",
        de: "Sie müssen Ihren TikTok-Benutzernamen eingeben"
    }


    // Hero input Submit
    document.getElementById('heroForm').addEventListener('submit', function(e) {
        e.preventDefault();
        openModal();
    });
    // Auto-add @ symbol to input
    document.getElementById('usernameInput').addEventListener('input', function(e) {
        let value = e.target.value;
        // If the input is empty or doesn't start with @, add it
        if (value.length === 0 || !value.startsWith('@')) {
            // If user typed something but no @, add @ at the beginning
            if (value.length > 0 && !value.startsWith('@')) {
                e.target.value = '@' + value;
            }
            // If input is empty and user starts typing, add @
            else if (value.length === 0) {
                e.target.value = '@';
            }
        }
        // Prevent user from deleting the @ symbol
        if (value.length > 0 && !value.startsWith('@')) {
            e.target.value = '@' + value.replace('@', '');
        }
    });
    // Handle keydown to prevent deleting @ at position 0
    document.getElementById("usernameInput").addEventListener("keydown", function (e) {
        const input = e.target;
        const cursorPosition = input.selectionStart;

        // Evitar borrar el @ inicial
        if ((e.key === "Backspace" || e.key === "Delete") && cursorPosition <= 1) {
            e.preventDefault();
            // Mantener cursor después de @
            setTimeout(() => {
                input.setSelectionRange(1, 1);
            }, 0);
        }

        // Evitar espacios
        if (e.key === " " || e.code === "Space") {
            e.preventDefault();
        }
    });

    // Adicionalmente, eliminar cualquier espacio que se haya pegado
    document.getElementById("usernameInput").addEventListener("input", function (e) {
        const input = e.target;
        input.value = input.value.replace(/\s+/g, "");
    });
    // Set initial @ when input gets focus
    document.getElementById('usernameInput').addEventListener('focus', function(e) {
        if (e.target.value === '') {
            e.target.value = '@';
            // Position cursor after @
            setTimeout(() => {
                e.target.setSelectionRange(1, 1);
            }, 0);
        }
    });

    function openModal() {
        const error = document.getElementById('message-error');
        const username = document.getElementById('usernameInput').value.trim();
        if (!username || username === '@') {
            error.classList.remove("hidden")
            error.innerText = get_in_user[lag1];
            setTimeout(() => {
                error.classList.add("hidden")
            }, 5000);
            return;
        }
        // Update modal with user data
        document.getElementById('modal-username').textContent = username;
        document.getElementById('modal-platform-icon').textContent = selectedPlatform === 'instagram' ? '📸' : '🎵';
        // Show modal
        document.getElementById('followersModal').classList.remove('hidden');
        document.body.classList.add('overflow-hidden');
    }
</script>

<script is:inline>

    // === Sistema de traducciones ===
    const MESSAGES_HERO = {
        order_not_found: {
            es: "🚨 Error: No se encontraron datos del pedido",
            en: "🚨 Error: No order data found",
            fr: "🚨 Erreur : aucune donnée de commande trouvée",
            pt: "🚨 Erro: Nenhum dado do pedido encontrado",
            de: "🚨 Fehler: Keine Bestelldaten gefunden"
        },
        followers_label: {
            es: "Seguidores",
            en: "Followers",
            fr: "Abonnés",
            pt: "Seguidores",
            de: "Follower"
        },
        free_label: {
            es: "GRATIS",
            en: "FREE",
            fr: "GRATUIT",
            pt: "GRÁTIS",
            de: "KOSTENLOS"
        },
        select_goal: {
            en: "⚠️ Please select your follower goal",
            es: "⚠️ Por favor selecciona tu objetivo de seguidores",
            pt: "⚠️ Por favor, selecione sua meta de seguidores",
            fr: "⚠️ Veuillez sélectionner votre objectif d'abonnés",
            de: "⚠️ Bitte wählen Sie Ihr Follower-Ziel aus"
        },
        enter_email: {
            en: "⚠️ Please enter your email",
            es: "⚠️ Por favor, ingresa tu email",
            pt: "⚠️ Por favor, insira seu e-mail",
            fr: "⚠️ Veuillez entrer votre e-mail",
            de: "⚠️ Bitte geben Sie Ihre E-Mail-Adresse ein"
        },
    };


    // Detecta idioma del navegador (ej: "es", "en", "fr", "pt")
    const lag2 = document.getElementById("lang")?.value;

    function getMessage(key, lang = lag2) {
        return MESSAGES_HERO[key]?.[lang] || MESSAGES_HERO[key]?.["en"] || "";
    }

    // === Función principal para abrir el modal de pago ===
    async function openPaymentModal() {
        const orderData = JSON.parse(localStorage.getItem("orderData"));
        if (!orderData) {
            alert(getMessage("order_not_found"));
            return;
        }

        // Actualizar datos en el modal
        document.getElementById("payment-username").textContent = "@" + orderData.username;
        document.getElementById("payment-platform").textContent =
            orderData.platform === "instagram"
                ? "Instagram"
                : "Tiktok";
        document.getElementById("payment-platform-icon").textContent =
            orderData.platform === "instagram" ? "📸" : "🎵";

        document.getElementById("payment-followers").textContent =
            orderData.followers.toLocaleString() + " " + getMessage("followers_label");

        // Asignar precios según la plataforma y cantidad
        let basePrice = getMessage("free_label");
        let totalPay = "€1";
        const freePay = document.querySelectorAll("#pay-verify");

        if (orderData.followers > 50) {
            if (orderData.platform === "instagram") {
                const priceMapInsta = {
                    500: "€3.9",
                    1000: "€5.9",
                    2500: "€12.9",
                    5000: "€29.9",
                    10000: "€39.9",
                    20000: "€69.9",
                    25000: "€84.9"
                };
                basePrice = priceMapInsta[orderData.followers] || "€29.99";
                totalPay = basePrice;
            } else {
                const priceMapTiktok = {
                    500: "€7.9",
                    1000: "€11.9",
                    2500: "€26.9",
                    5000: "€47.9",
                    10000: "€84.9",
                    15000: "€119.9",
                    25000: "€189.9"
                };
                basePrice = priceMapTiktok[orderData.followers] || "€29.99";
                totalPay = basePrice;
            }

            // Ocultar sección gratuita si es de pago
            freePay.forEach(element => element.classList.add("hidden"));
        } else {
            // Mostrar sección gratuita
            freePay.forEach(element => element.classList.remove("hidden"));
        }

        document.getElementById("payment-price").textContent = basePrice;
        document.getElementById("total-pay").textContent = totalPay;

        // Mostrar el modal
        document.getElementById("paymentModal").classList.remove("hidden");
        document.body.classList.add("overflow-hidden");
    }

    // Volver al modal de seguidores
    function backToFollowersModal() {
        closePaymentModal();
        document.getElementById("followersModal").classList.remove("hidden");
        document.body.classList.add("overflow-hidden");
    }

    // Cerrar modal de pago
    function closePaymentModal() {
        document.getElementById("paymentModal").classList.add("hidden");
        document.body.classList.remove("overflow-hidden");
        document.getElementById("payment-form").reset();
        localStorage.clear();
    }
</script>
