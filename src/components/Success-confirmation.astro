---
import { useI18n } from '../i18n';
const { translate, currentLang } = useI18n(Astro);
const expects = translate('success.expect.items') as unknown as {}[]
const nexts = translate('success.next.items') as unknown as {}[]
---

<!-- Animated Background Elements -->

<!-- Header -->
<header class="relative z-50 py-8">
    <div class="container mx-auto px-6">
        <div class="flex items-center justify-center">
            <!-- Logo -->
            <a href={`/${currentLang}/`} class="text-4xl font-bold text-white">
                🚀 <span class="gradient-text">TrendyUp</span>
            </a>
        </div>
    </div>
</header>

<!-- Main Content -->
<main class="relative z-10 container mx-auto px-6 pb-12">
    <input id="lang" type="hidden" value={currentLang}>
    <!-- Success Icon -->
    <div class="text-center mb-8 animate-fade-in">
        <div class="success-animation inline-block text-8xl mb-4">✅</div>
        <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">
            {translate('success.process.title')} <span class="gradient-text">{translate('success.process.title.span')}</span>
        </h1>
        <p class="text-xl text-gray-300">
            {translate('success.process.subtitle')}
        </p>
    </div>

    <!-- Progress Indicator -->
    <div class="max-w-md mx-auto mb-12 animate-slide-up">
        <div class="flex justify-center mb-6">
            <div class="flex items-center space-x-2">
                <div class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-white text-sm font-bold">
                    ✓
                </div>
                <div class="w-12 h-1 bg-green-500 rounded-full"></div>
                <div class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-white text-sm font-bold">
                    ✓
                </div>
                <div class="w-12 h-1 bg-green-500 rounded-full"></div>
                <div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white text-sm font-bold animate-pulse">
                    3
                </div>
            </div>
        </div>
    </div>

    <!-- Order Summary Card -->
    <div class="max-w-2xl mx-auto mb-12">
        <div class="bg-white/10 backdrop-blur-lg rounded-3xl p-8 content-glow border border-white/20 animate-slide-up">
            <div class="text-center mb-8">
                <h2 class="text-3xl font-bold text-white mb-4">
                    {translate('success.summary.progress.title')}
                </h2>
                <div class="notification-badge inline-flex items-center px-4 py-2 bg-green-500/20 border border-green-400/50 rounded-full text-green-300 text-sm font-semibold">
                    {translate('success.summary.progress.badge')}
                </div>
            </div>

            <!-- Order Details -->
            <div class="space-y-6">
                <!-- Service Info -->
                <div class="bg-gradient-to-r from-blue-500 to-purple-500/70 rounded-2xl p-6 border border-blue-400/30">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-xl font-bold text-white">
                            {translate('success.summary.progress.service.title')}
                        </h3>
                        <span class="text-3xl" id="serviceIcon">🤖</span>
                    </div>
                    <div class="grid md:grid-cols-2 gap-4 text-white">
                        <div>
                            <div class="text-sm text-gray-300">{translate('success.summary.progress.service.network')}</div>
                            <div class="text-lg font-semibold" id="socialNetwork">
                                📸 Instagram
                            </div>
                        </div>
                        <div>
                            <div class="text-sm text-gray-300">{translate('success.summary.progress.service.type')}</div>
                            <div class="text-lg font-semibold" id="serviceType">
                                👥 Seguidores
                            </div>
                        </div>
                    </div>
                    <div class="mt-4">
                        <div class="text-sm text-gray-300">{translate('success.summary.progress.service.url')}</div>
                        <div class="text-lg font-semibold text-blue-300 break-all" id="targetUrl">
                            https://instagram.com/tu_usuario
                        </div>
                    </div>
                </div>

                <!-- Delivery Info -->
                <div class="bg-gradient-to-r from-green-500 to-teal-500/70 rounded-2xl p-6 border border-green-400/30">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-xl font-bold text-white">{translate('success.summary.progress.delivery.title')}</h3>
                        <span class="text-3xl animate-spin-slow">⚡</span>
                    </div>
                    <div class="grid md:grid-cols-2 gap-4 text-white">
                        <div>
                            <div class="text-sm text-gray-300">{translate('success.summary.progress.delivery.quantity')}</div>
                            <div class="text-2xl font-bold text-green-300" id="quantity">500 seguidores</div>
                        </div>
                        <div>
                            <div class="text-sm text-gray-300">{translate('success.summary.progress.delivery.time')}</div>
                            <div class="text-lg font-semibold text-yellow-300" id="estimatedTime">5-15 minutos</div>
                        </div>
                    </div>

                    <!-- Progress Bar -->
                    <div class="mt-6">
                        <div class="flex justify-between text-sm text-gray-300 mb-2">
                            <span>{translate('success.process.progress.label')}</span>
                            <span id="progressPercent">{translate('success.process.progress.status')}</span>
                        </div>
                        <div class="progress-container">
                            <div class="progress-bar" id="progressBar"></div>
                        </div>
                    </div>
                </div>

                <!-- Payment Info -->
                <div class="bg-gradient-to-r from-yellow-500 to-orange-500/70 rounded-2xl p-6 border border-yellow-400/30">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-xl font-bold text-white">{translate('success.summary.progress.payment.title')}</h3>
                        <span class="text-3xl">💳</span>
                    </div>
                    <div class="space-y-3 text-white">
                        <div class="flex justify-between">
                            <span class="text-gray-300">{translate('success.summary.progress.payment.card')}</span>
                            <span class="text-green-300 font-semibold">{translate('success.summary.progress.payment.card.status')}</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-300">{translate('success.summary.progress.payment.state')}</span>
                            <span class="text-blue-300 font-semibold">{translate('success.summary.progress.payment.state.status')}</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Status Updates -->
    <div class="max-w-2xl mx-auto mb-12">
        <div class="bg-white/10 backdrop-blur-lg rounded-3xl p-8 border border-white/20">
            <div class="text-center mb-6">
                <h3 class="text-2xl font-bold text-white mb-2">{translate('success.status.title')}</h3>
                <p class="text-gray-300">{translate('success.status.subtitle')}</p>
            </div>

            <!-- Status Timeline -->
            <div class="space-y-4" id="statusTimeline">
                <!-- Step 1 -->
                <div class="step1 flex items-center space-x-4 p-4 bg-green-500/20 rounded-xl border border-green-400/30">
                    <div class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-white font-bold">✓</div>
                    <div class="flex-1">
                        <div class="text-white font-semibold">{translate('success.process.progress.step1')}</div>
                        <div class="text-green-300 text-sm" id="step1Time">{translate('success.process.progress.step1.time')}</div>
                    </div>
                </div>

                <!-- Step 2 -->
                <div class="step2 flex items-center space-x-4 p-4 bg-blue-500/20 rounded-xl border border-blue-400/30">
                    <div class="contend w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold animate-pulse">⚡</div>
                    <div class="flex-1">
                        <div class="text-white font-semibold">{translate('success.process.progress.step2')}</div>
                        <div class="text text-blue-300 text-sm">{translate('success.process.progress.step2.status')}</div>
                    </div>
                </div>

                <!-- Step 3 -->
                <div class="step3 flex items-center space-x-4 p-4 bg-gray-500/20 rounded-xl border border-gray-400/30">
                    <div class="contend w-8 h-8 bg-gray-500 rounded-full flex items-center justify-center text-white font-bold">3</div>
                    <div class="flex-1">
                        <div class="text-gray-300 font-semibold">{translate('success.process.progress.step3')}</div>
                        <div class="text text-gray-400 text-sm">{translate('success.process.progress.step3.status')}</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Important Information -->
    <div class="max-w-2xl mx-auto mb-12">
        <div class="grid md:grid-cols-2 gap-6">
            <!-- What to Expect -->
            <div class="card-hover bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20">
                <div class="text-center mb-4">
                    <div class="text-4xl mb-2">📈</div>
                    <h4 class="text-xl font-bold text-white">{translate('success.expect.title')}</h4>
                </div>
                <ul class="space-y-2 text-gray-300 text-sm">
                    {
                        expects.map((item)=>(
                            <li class="flex items-center space-x-2">
                                <span class="text-green-400">✓</span> 
                                <span>{item}</span>
                            </li>
                        ))
                    }
                </ul>
            </div>

            <!-- Next Steps -->
            <div class="card-hover bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20">
                <div class="text-center mb-4">
                    <div class="text-4xl mb-2">📋</div>
                    <h4 class="text-xl font-bold text-white">{translate('success.next.title')}</h4>
                </div>
                <ul class="space-y-2 text-gray-300 text-sm">
                    {
                        nexts.map((item, index)=>(
                            <li class="flex items-start space-x-2">
                                <span class="text-blue-400">{index + 1}.</span> 
                                <span>{item}</span>
                            </li>
                        ))
                    }
                </ul>
            </div>
        </div>
    </div>

    <!-- Login -->
    <div class="max-w-xl mx-auto text-center mb-12">
        <div class="bg-gradient-to-r from-purple-500 to-blue-500/20 backdrop-blur-lg rounded-2xl p-6 border border-purple-400/30">
            <div class="text-3xl mb-4">😊</div>
            <h3 class="text-xl font-bold text-white mb-4">{translate('success.login.title')}</h3>
            <p class="text-gray-300 mb-6">{translate('success.login.subtitle')}</p>
            <div class="flex flex-col sm:flex-row gap-4 justify-center">
                <a href="/login" class="px-6 py-3 bg-blue-500 text-white font-semibold rounded-full hover:bg-blue-600 transition-colors">
                    {translate('success.login.button')}
                </a>
            </div>
        </div>
    </div>

    <!-- Contact Support -->
    <div class="max-w-xl mx-auto text-center">
        <div class="bg-gradient-to-r from-blue-500 to-purple-500/20 backdrop-blur-lg rounded-2xl p-6 border border-purple-400/30">
            <div class="text-3xl mb-4">💬</div>
            <h3 class="text-xl font-bold text-white mb-4">{translate('success.support.title')}</h3>
            <p class="text-gray-300 mb-6">{translate('success.support.subtitle')}</p>
            <div class="flex flex-col sm:flex-row gap-4 justify-center">
                <a href="mailto:soporte@trendyup.es" class="px-6 py-3 bg-blue-500 text-white font-semibold rounded-full hover:bg-blue-600 transition-colors">
                    {translate('success.support.button')}
                </a>
            </div>
        </div>
    </div>
</main>

<!-- Footer -->
<footer class="relative z-10 py-8 text-center">
    <div class="container mx-auto px-6">
        <p class="text-gray-400 text-sm">
            {translate('success.footer.text')}
        </p>
    </div>
</footer>

<!-- JavaScript -->
<script is:inline>
    // === Diccionario de traducciones ===
    const MESSAGES_SUCCESS = {
        progress_completed: {
            es: "% completado",
            en: "% completed",
            fr: "% terminé",
            pt: "% concluído",
            de: "% abgeschlossen"
        },
        completed: {
            es: "Completado",
            en: "Completed",
            fr: "Terminé",
            pt: "Concluído",
            de: "Abgeschlossen"
        },
        completed_successfully: {
            es: "Completado exitosamente",
            en: "Completed successfully",
            fr: "Terminé avec succès",
            pt: "Concluído com sucesso",
            de: "Erfolgreich abgeschlossen"
        },
        delivery_completed: {
            es: "¡Entrega Completada!",
            en: "Delivery Completed!",
            fr: "Livraison terminée !",
            pt: "Entrega Concluída!",
            de: "Lieferung abgeschlossen!"
        },
        check_profile_now: {
            es: "Revisa tu perfil ahora",
            en: "Check your profile now",
            fr: "Vérifiez votre profil maintenant",
            pt: "Verifique seu perfil agora",
            de: "Überprüfen Sie jetzt Ihr Profil"
        },
        likes: {
            es: "Likes",
            en: "Likes",
            fr: "J’aime",
            pt: "Curtidas",
            de: "Likes"
        },
        followers: {
            es: "Seguidores",
            en: "Followers",
            fr: "Abonnés",
            pt: "Seguidores",
            de: "Follower"
        },
        views: {
            es: "Visualizaciones",
            en: "Views",
            fr: "Vues",
            pt: "Visualizações",
            de: "Aufrufe"
        },
        estimated_time: {
            es: "20-50 minutos",
            en: "20-50 minutes",
            fr: "20-50 minutes",
            pt: "20-50 minutos",
            de: "20–50 Minuten"
        }
    };


    const locale = document.getElementById("lang")?.value;

    function getMessage(key) {
        return MESSAGES_SUCCESS[key]?.[locale] || MESSAGES_SUCCESS[key]?.["en"] || "";
    }

    let progress = 0;
    const progressBar = document.getElementById("progressBar");
    const progressPercent = document.getElementById("progressPercent");

    const totalDuration = 20 * 60 * 1000;
    const interval = 2000;
    const totalSteps = totalDuration / interval;
    const baseIncrement = 100 / totalSteps;

    function updateProgress() {
        const randomFactor = Math.random() * 0.5 + 0.75;
        progress += baseIncrement * randomFactor;

        if (progress > 100) progress = 100;

        progressBar.style.width = progress + "%";
        progressPercent.textContent = Math.round(progress) + " " + getMessage("progress_completed");

        if (progress < 100) {
            setTimeout(updateProgress, interval);
        } else {
            progressPercent.textContent = "✅ " + getMessage("completed");
            updateStatusTimeline();
        }
    }

    function updateStatusTimeline() {
        const step2 = document.querySelector("#statusTimeline .step2");
        const step3 = document.querySelector("#statusTimeline .step3");

        const circle = step2.querySelector(".contend");
        const statusText = step2.querySelector(".text");

        step2.className = step2.className
            .replace("bg-blue-500/20", "bg-green-500/20")
            .replace("border-blue-400/30", "border-green-400/30");

        circle.className =
            "w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-white font-bold";
        circle.textContent = "✓";

        statusText.textContent = getMessage("completed");
        statusText.className = "text-green-300 text-sm";

        setTimeout(() => {
            const circle3 = step3.querySelector(".contend");
            const title3 = step3.querySelector(".text-gray-300");
            const status3 = step3.querySelector(".text-gray-400");

            step3.className = step3.className
                .replace("bg-gray-500/20", "bg-green-500/20")
                .replace("border-gray-400/30", "border-green-400/30");

            circle3.className =
                "w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-white font-bold";
            circle3.textContent = "✓";

            title3.className = "text-white font-semibold";
            status3.textContent = getMessage("completed_successfully");
            status3.className = "text-green-300 text-sm";

            showCompletionNotification();
        }, 2000);
    }

    function showCompletionNotification() {
        const notification = document.createElement("div");
        notification.className =
            "fixed top-4 right-4 bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg z-50 animate-slide-up";
        notification.innerHTML = `
            <div class="flex items-center space-x-2">
                <span class="text-2xl">🎉</span>
                <div>
                    <div class="font-bold">${getMessage("delivery_completed")}</div>
                    <div class="text-sm">${getMessage("check_profile_now")}</div>
                </div>
            </div>
        `;
        document.body.appendChild(notification);

        setTimeout(() => {
            notification.remove();
        }, 5000);
    }

    setTimeout(updateProgress, 1000);

    function updateTimestamps() {
        const now = new Date();
        document.getElementById("step1Time").textContent =
            `${getMessage("completed")} a las ${now.toLocaleTimeString()}`;
    }

    updateTimestamps();

    const socialNetwork= {
        instagram:'📸 Instagram',
        tiktok:'🎵 Tiktok'
    };

    const serviceType= {
        likes:{icon:'❤️', text:getMessage("likes")},
        followers:{icon:'👥', text:getMessage("followers")},
        views:{icon:'👁️', text:getMessage("views")}
    };

    const orderData = JSON.parse(localStorage.getItem("orderData"));
    const url = localStorage.getItem("url");

    document.getElementById("socialNetwork").textContent = socialNetwork[orderData.platform];
    document.getElementById("serviceType").textContent = serviceType["followers"].icon + ' ' + serviceType["followers"].text;
    document.getElementById("serviceIcon").textContent = serviceType["followers"].icon;
    document.getElementById("targetUrl").textContent = url;
    document.getElementById("quantity").textContent = orderData.followers + ' ' + serviceType["followers"].text;
    document.getElementById("estimatedTime").textContent = getMessage("estimated_time");

    document.querySelectorAll(".card-hover").forEach((card) => {
        card.addEventListener("mouseenter", function () {
            this.style.transform = "translateY(-5px) scale(1.02)";
        });
        card.addEventListener("mouseleave", function () {
            this.style.transform = "translateY(0) scale(1)";
        });
    });
</script>
